{"version":3,"sources":["api/goodsFromServer.tsx","App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","isChecked","good","includes","setState","currentState","filter","item","goods","this","stringOfProducts","slice","join","length","className","type","onClick","map","htmlFor","classNames","id","checked","onChange","bind","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAAaA,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,eC2EaC,E,4MA3EbC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,UAAY,SAACC,GACX,OAAQ,EAAKH,MAAMC,cAAcG,SAASD,GAItC,EAAKE,UAAS,SAACC,GAAD,MAAmB,CACjCL,cAAeK,EAAaL,cAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASL,SAJlE,EAAKE,UAAS,SAACC,GAAD,MAAmB,CACjCL,cAAc,GAAD,mBAAMK,EAAaL,eAAnB,CAAkCE,S,4CAOrD,WAAU,IAAD,OACgBM,EAAUC,KAAKV,MAA9BC,cACFU,EAAmB,CACvBF,EAAMG,MAAM,GAAI,GAAGC,KAAK,MACxBJ,EAAMG,OAAO,IACbC,KACAJ,EAAMK,OAAS,EACX,QACA,IAGN,OACE,sBAAKC,UAAU,MAAf,UACGN,EAAMK,OACL,qBAAIC,UAAU,aAAd,UACGJ,EACA,kBAGH,oBAAII,UAAU,aAAd,+BAGF,qBAAKA,UAAU,cAAf,WACKN,EAAMK,QACP,wBACEE,KAAK,SACLD,UAAU,iBACVE,QAAS,kBAAM,EAAKZ,SAAS,CAAEJ,cAAe,MAHhD,qBAUJ,oBAAIc,UAAU,YAAd,SACGjB,EAAgBoB,KAAI,SAACf,GAAD,OACnB,oBAAeY,UAAU,iBAAzB,SACE,wBACEI,QAAShB,EACTY,UAAWK,IACT,aACA,CAAE,qBAAsBX,EAAML,SAASD,KAJ3C,UAOE,4BAAIA,IACJ,uBACEa,KAAK,WACLD,UAAU,gBACVM,GAAIlB,EACJmB,QAASb,EAAML,SAASD,GACxBoB,SAAU,EAAKrB,UAAUsB,KAAK,EAAMrB,SAdjCA,e,GAnDHsB,IAAMC,WCNxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.13931410.chunk.js","sourcesContent":["export const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport classNames from 'classnames';\nimport { goodsFromServer } from './api/goodsFromServer';\nimport './App.scss';\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  isChecked = (good: string) => {\n    return !this.state.selectedGoods.includes(good)\n      ? this.setState((currentState) => ({\n        selectedGoods: [...currentState.selectedGoods, good],\n      }))\n      : this.setState((currentState) => ({\n        selectedGoods: currentState.selectedGoods.filter(item => item !== good),\n      }));\n  };\n\n  render() {\n    const { selectedGoods: goods } = this.state;\n    const stringOfProducts = [\n      goods.slice(0, -1).join(', '),\n      goods.slice(-1),\n    ].join(\n      goods.length > 1\n        ? ' and '\n        : '',\n    );\n\n    return (\n      <div className=\"App\">\n        {goods.length ? (\n          <h1 className=\"App__title\">\n            {stringOfProducts}\n            {' is selected'}\n          </h1>\n        ) : (\n          <h1 className=\"App__title\">No goods selected</h1>\n        )}\n\n        <div className=\"App__button\">\n          {!!goods.length && (\n            <button\n              type=\"button\"\n              className=\"App__clear-btn\"\n              onClick={() => this.setState({ selectedGoods: [] })}\n            >\n              Clear\n            </button>\n          )}\n        </div>\n\n        <ul className=\"App__list\">\n          {goodsFromServer.map((good: string) => (\n            <li key={good} className=\"App__list-item\">\n              <label\n                htmlFor={good}\n                className={classNames(\n                  'App__label',\n                  { 'App__label-checked': goods.includes(good) },\n                )}\n              >\n                <p>{good}</p>\n                <input\n                  type=\"checkbox\"\n                  className=\"App__checkbox\"\n                  id={good}\n                  checked={goods.includes(good)}\n                  onChange={this.isChecked.bind(this, good)}\n                />\n              </label>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}